[{"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\App.js":"1","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\index.js":"2","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\login\\Login.js":"3","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\categories\\Categories.js":"4","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\components\\organims\\header\\Header.js":"5","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\routines\\Routines.js":"6","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\pictograms\\Pictograms.js":"7","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\home\\Home.js":"8","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\reportWebVitals.js":"9","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\config.js":"10","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\components\\atoms\\input\\Input.js":"11","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\components\\molecules\\card\\Card.js":"12","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\components\\molecules\\modal\\Modal.js":"13","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\store.js":"14","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\rootReducer.js":"15","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\categories.js":"16","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\pictograms.js":"17","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\users.js":"18","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\routines.js":"19","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\patients.js":"20","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\actions\\users.js":"21","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\categories.js":"22","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\users.js":"23","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\patients.js":"24","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\pictograms.js":"25","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\routines.js":"26","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\actions\\categories.js":"27"},{"size":849,"mtime":1611113358669,"results":"28","hashOfConfig":"29"},{"size":589,"mtime":1611113017222,"results":"30","hashOfConfig":"29"},{"size":1631,"mtime":1611101814833,"results":"31","hashOfConfig":"29"},{"size":2323,"mtime":1611113276304,"results":"32","hashOfConfig":"29"},{"size":736,"mtime":1610631226404,"results":"33","hashOfConfig":"29"},{"size":293,"mtime":1610603788818,"results":"34","hashOfConfig":"29"},{"size":2523,"mtime":1610631241102,"results":"35","hashOfConfig":"29"},{"size":135,"mtime":1610667384890,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1610601800611,"results":"38","hashOfConfig":"29"},{"size":247,"mtime":1610602560939,"results":"39","hashOfConfig":"29"},{"size":414,"mtime":1611027323110,"results":"40","hashOfConfig":"29"},{"size":255,"mtime":1611027681426,"results":"41","hashOfConfig":"29"},{"size":401,"mtime":1611100974401,"results":"42","hashOfConfig":"29"},{"size":341,"mtime":1569079506028,"results":"43","hashOfConfig":"29"},{"size":495,"mtime":1572479791879,"results":"44","hashOfConfig":"29"},{"size":2985,"mtime":1570808859110,"results":"45","hashOfConfig":"29"},{"size":2485,"mtime":1571270033462,"results":"46","hashOfConfig":"29"},{"size":1289,"mtime":1611102244013,"results":"47","hashOfConfig":"29"},{"size":983,"mtime":1572479791880,"results":"48","hashOfConfig":"29"},{"size":1898,"mtime":1570295003549,"results":"49","hashOfConfig":"29"},{"size":1416,"mtime":1611110657869,"results":"50","hashOfConfig":"29"},{"size":687,"mtime":1570808859005,"results":"51","hashOfConfig":"29"},{"size":275,"mtime":1571687652337,"results":"52","hashOfConfig":"29"},{"size":595,"mtime":1570295003514,"results":"53","hashOfConfig":"29"},{"size":590,"mtime":1570808859006,"results":"54","hashOfConfig":"29"},{"size":220,"mtime":1572479791878,"results":"55","hashOfConfig":"29"},{"size":5177,"mtime":1611112232246,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"opp80x",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i4tvk5",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"63"},"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\App.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\index.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\login\\Login.js",[],["114","115"],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\categories\\Categories.js",["116"],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\components\\organims\\header\\Header.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\routines\\Routines.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\pictograms\\Pictograms.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\pages\\home\\Home.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\reportWebVitals.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\config.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\components\\atoms\\input\\Input.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\components\\molecules\\card\\Card.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\components\\molecules\\modal\\Modal.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\store.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\rootReducer.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\categories.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\pictograms.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\users.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\routines.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\reducers\\patients.js",["117"],"import { \r\n    FETCH_PATIENTS_PENDING,\r\n    FETCH_PATIENTS_ERROR,\r\n    FETCH_PATIENTS_SUCCESS,\r\n    FETCH_PATIENT_SUCCESS,\r\n    FETCH_ADD_PATIENT_SUCCESS,\r\n    CHANGE_VOICE_ASSISTANT_PENDING,\r\n    CHANGE_VOICE_ASSISTANT,\r\n    UNLINK_PATIENT_SUCCESS,\r\n  } from '../constants/patients';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    loadingVoice: false,\r\n    patient: {},\r\n    patients : [],\r\n    err: null,\r\n}\r\n\r\nconst patientsReducer = ( state = initialState, { type, payload }) => {\r\n    switch(type) {\r\n        case FETCH_PATIENTS_PENDING: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case FETCH_PATIENTS_ERROR: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                err: payload.err\r\n            }\r\n        }\r\n        case FETCH_PATIENTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                patients: payload.patients\r\n            }\r\n        }\r\n        case UNLINK_PATIENT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                patients: state.patients.filter(pictogram => pictogram.id !== payload.id)\r\n            }\r\n        }\r\n        case FETCH_PATIENT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                patient: payload.patient\r\n            }\r\n        }\r\n        case CHANGE_VOICE_ASSISTANT_PENDING: {\r\n            return {\r\n                ...state,\r\n                loadingVoice: true\r\n            }\r\n        }\r\n        case CHANGE_VOICE_ASSISTANT: {\r\n            return {\r\n                ...state,\r\n                loadingVoice: false,\r\n                patient: payload.patient\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default patientsReducer;","C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\actions\\users.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\categories.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\users.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\patients.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\pictograms.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\constants\\routines.js",[],"C:\\Users\\nalarcon\\Documents\\projects\\scapa-web\\src\\redux\\actions\\categories.js",["118","119","120","121","122","123","124","125"],"import { FETCH_CATEGORIES_PENDING,\r\n         FETCH_CATEGORIES_ERROR,\r\n         FETCH_CATEGORIES_SUCCESS, \r\n         FETCH_PATIENT_CATEGORIES_SUCCESS,\r\n         FETCH_ADD_CATEGORY_SUCCESS,\r\n         FETCH_UPDATE_CATEGORY_SUCCESS,\r\n         FETCH_DELETE_CATEGORY_SUCCESS,\r\n         FETCH_ADD_CATEGORIES_TO_FOLDER,\r\n         FETCH_DELETE_CATEGORY_TO_FOLDER\r\n       } from '../constants/categories';\r\nimport config from '../../config';\r\nimport axios from 'axios'\r\n\r\nexport const getCategories = ({ accessToken, client, uid }) => {\r\n    return dispatch => {\r\n        dispatch({ type: FETCH_CATEGORIES_PENDING });\r\n        console.log(accessToken, client, uid);\r\n        const headers = { headers: {\r\n            'access-token': accessToken,\r\n            client,\r\n            uid\r\n        }}\r\n        axios.get(`${process.env.REACT_APP_API_URL}/admin/categories`, headers )\r\n            .then( response => dispatch({ type: FETCH_CATEGORIES_SUCCESS, payload: { categories: response.data.data }}))\r\n            .catch( error => console.log(error))\r\n        // fetch(`${config.server}/categories`)\r\n        // .then(res => res.json())\r\n        // .then(categories => {\r\n        //     return dispatch({ type: FETCH_CATEGORIES_SUCCESS, payload: {categories}})\r\n        // })\r\n        // .catch( err => dispatch({ type: FETCH_CATEGORIES_ERROR, payload: {err}}))\r\n    }\r\n}\r\n\r\n// export const getCategoriesByPatient = id => {\r\n//     return dispatch => {\r\n//         dispatch({ type: FETCH_CATEGORIES_PENDING});\r\n//         fetch(`${config.server}/categories/folder/${id}`)\r\n//         .then(res => res.json())\r\n//         .then(categories => {\r\n//             return dispatch({ type: FETCH_PATIENT_CATEGORIES_SUCCESS, payload: {categories}})\r\n//         })\r\n//         .catch( err => dispatch({ type: FETCH_CATEGORIES_ERROR, payload: {err}}))\r\n//     }\r\n// }\r\n\r\n// export const addCategory = (description) => {\r\n//     return dispatch => {\r\n//         fetch(`${config.server}/categories`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({description})\r\n//         })\r\n//         .then(res => res.json())\r\n//         .then(data => data.insert === 'success' ? dispatch({ type: FETCH_ADD_CATEGORY_SUCCESS, payload: { category: { id: data.response.id, description: description }}}) : 'error')\r\n//         .catch(err => dispatch({type: FETCH_CATEGORIES_ERROR, payload: {err}}));\r\n//     }\r\n// }\r\n\r\n// export const deleteCategory = (id) => {\r\n//     return dispatch => {\r\n//         fetch(`${config.server}/categories/${id}`, {\r\n//             method: 'DELETE',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//         })\r\n//         .then(res => res.json())\r\n//         .then(data => data.delete === 'success' ? dispatch({ type: FETCH_DELETE_CATEGORY_SUCCESS, payload: {id}}) : 'error')\r\n//         .catch(err => dispatch({type: FETCH_CATEGORIES_ERROR, payload: {err}}));\r\n//     }\r\n// }\r\n\r\n// export const updateCategory = (id, newDescription) => {\r\n//     return dispatch => {\r\n//         fetch(`${config.server}/categories/${id}`, {\r\n//             method: 'PUT',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({description: newDescription})\r\n//         })\r\n//         .then(res => res.json())\r\n//         .then(data => data.update === 'success' ? dispatch({ type: FETCH_UPDATE_CATEGORY_SUCCESS, payload: { id, newDescription }}) : 'error')\r\n//         .catch(err => dispatch({type: FETCH_CATEGORIES_ERROR, payload: {err}}));\r\n//     }\r\n// }\r\n\r\n// export const addCategoriesToFolder = (id, categories) => {\r\n//     return dispatch => {\r\n//         dispatch({type: FETCH_CATEGORIES_PENDING });\r\n//         fetch(`${config.server}/categories-folder/${id}`,{\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({categories})\r\n//         })\r\n//         .then( res => res.json())\r\n//         .then( data => {\r\n//             data && \r\n//             data.categories.forEach( category => {\r\n//                 console.log('category', category)\r\n//                 dispatch({ type: FETCH_ADD_CATEGORIES_TO_FOLDER, payload: {category}})\r\n//             })\r\n//         })\r\n//         .catch(err => dispatch({type: FETCH_CATEGORIES_ERROR, payload: {err}}));\r\n//     }\r\n// }\r\n\r\n// export const unlinkCategory = (idPatient, idCategory) =>{\r\n//     return dispatch => {\r\n//         dispatch({type: FETCH_CATEGORIES_PENDING });\r\n//         fetch(`${config.server}/categories-folder/${idPatient}/${idCategory}`, {\r\n//             method: 'DELETE',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             }\r\n//         })\r\n//         .then( res => res.json())\r\n//         .then( data => data && dispatch({ type: FETCH_DELETE_CATEGORY_TO_FOLDER, payload: {id: idCategory}}))\r\n//         .catch(err => dispatch({type: FETCH_CATEGORIES_ERROR, payload: {err}}));\r\n//     }\r\n// }\r\n",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":15,"column":8,"nodeType":"132","endLine":15,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":6,"column":5,"nodeType":"136","messageId":"137","endLine":6,"endColumn":30},{"ruleId":"134","severity":1,"message":"138","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":32},{"ruleId":"134","severity":1,"message":"139","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":42},{"ruleId":"134","severity":1,"message":"140","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":36},{"ruleId":"134","severity":1,"message":"141","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":39},{"ruleId":"134","severity":1,"message":"142","line":7,"column":10,"nodeType":"136","messageId":"137","endLine":7,"endColumn":39},{"ruleId":"134","severity":1,"message":"143","line":8,"column":10,"nodeType":"136","messageId":"137","endLine":8,"endColumn":40},{"ruleId":"134","severity":1,"message":"144","line":9,"column":10,"nodeType":"136","messageId":"137","endLine":9,"endColumn":41},{"ruleId":"134","severity":1,"message":"145","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":14},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["148"],"no-unused-vars","'FETCH_ADD_PATIENT_SUCCESS' is defined but never used.","Identifier","unusedVar","'FETCH_CATEGORIES_ERROR' is defined but never used.","'FETCH_PATIENT_CATEGORIES_SUCCESS' is defined but never used.","'FETCH_ADD_CATEGORY_SUCCESS' is defined but never used.","'FETCH_UPDATE_CATEGORY_SUCCESS' is defined but never used.","'FETCH_DELETE_CATEGORY_SUCCESS' is defined but never used.","'FETCH_ADD_CATEGORIES_TO_FOLDER' is defined but never used.","'FETCH_DELETE_CATEGORY_TO_FOLDER' is defined but never used.","'config' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [dispatch, user]",{"range":"151","text":"152"},[571,573],"[dispatch, user]"]